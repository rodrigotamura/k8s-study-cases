apiVersion: apps/v1
kind: Deployment
metadata:
  name: goserver
  labels:
    app: goserver
spec:
  selector:  # seleciona a label
    matchLabels:
      app: goserver
  replicas: 1 # qnt de replicas que queremos
  # agora precisamos indicar os pods, e podemos fazer isso via templates
  # na verdade seria a especificação que está no arquivo de pod.yaml
  template:
    metadata:
      name: "goserver" # nome do pod
      # etiqueta que ajudam a fazer filtros, buscas, regras, etc.
      labels:
        app: "goserver"
    spec:
      # via de regra eh um container por pod
      containers:
        - name: "goserver"
          image: "rodrigotamura/hello-go:v5"
          envFrom:
            - configMapRef:
                name: goserver-env # indicar o nome do configFile
          
          volumeMounts:
            - mountPath: "/go/myfamily" # onde o volume será montado no container 
              name: config # nome do volumes.name
      volumes:
        - name: config # aqui pode colocar o nome que quiser
          configMap:
            name: configmap-family # nome do config map criado
            items: # quais itens queremos montar para esse volume
              - key: members # data mapeado lá no configmap-family.yaml
                path: "family.txt" # nome do arquivo que será criado